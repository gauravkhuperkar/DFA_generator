TODO :

Terms :
    5 tuple : (JSON) (less priority)
		sigma = alphabets (alphabet set)
		Q = States (set of states)
		q0 = Initial state
		F = final states (set of final states)
		delta = transition (a transition function/ alphabet set)
			> takes current state and alphabet
			> returns next state
			OR eg.  q1,1,q1
                    q1,0,q2
	> need JSON parser

	DFA_generator :
	    - Accepts 5 tuple
	    - returns DFA

    DFA :
        - .canRecognize function
            > takes string (language/alphabets)
            > returns true or false.


DFAEquation : {
    sigma = ["0","1"];
    Q = ["q0", "q1", "q2" ,"q3", "q4"];
    q0 = "q0";
    F = ["q2", "q4"]
    delta = {
              q0 : {1: "q1", 0 : "q2"},
              q1 : {1: "q1", 0 : "q3"},
              q2 : {1: "q2", 0 : "q0"},
              q3 : {1: "q0", 0 : "q2"},
              q4 : {1: "q1", 0 : "q3"}
            }
    }

Transitions :
    > Takes : q1,1,q1\nq1,0,q2
    > gives : q1 : {1: "q1", 0 : "q2"}


JSON :
    > need to read json file
    > need to parse

Parser :
    > read json file
    > parse recursively to Array of HashMap
    [{ tuple: {"HashMap for DFAEquation"}},
     { tuple: {"HashMap for DFAEquation"}},
     { tuple: {"HashMap for DFAEquation"}}]
     private methods: for parsing tuple, alphabets, delta and so on......


Still open Questions :

> State can be rich object or only string name is enough ?
> Transition ? instead of transition table, can it be something else ?
> Should state knows that it is final or not ?
